	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_inputString
_inputString:
	ld	hl, -9
	call	__frameset
	ld	l, 2
	xor	a, a
	ld	(ix + -3), hl
	ld	(ix + -4), a
	ld	(ix + -6), a
	ld	(ix + -5), a
BB0_1:
	call	_kb_Scan
	ld	iy, -720868
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	bit	6, a
	lea	hl, iy + 0
	jq	nz, BB0_29
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld.sis	bc, 1
	call	__sand
	ld	a, (ix + -4)
	dec	a
	ld	e, (ix + 9)
	cp	a, e
	jq	nc, BB0_4
	ld	a, l
	ld	l, 1
	xor	a, l
	xor	a, l
	bit	0, a
	jq	nz, BB0_31
BB0_4:
	ld	hl, -720876
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	de, (ix + -3)
	ld	a, e
	cp	a, 2
	jq	z, BB0_6
	ld	a, l
	cp	a, 0
	call	__setflag
	jq	m, BB0_10
BB0_6:
	ld	hl, -720876
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	de, (ix + -3)
	ld	a, e
	cp	a, 3
	jq	z, BB0_8
	ld	a, l
	cp	a, 0
	call	__setflag
	jq	m, BB0_11
BB0_8:
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	5, a
	jq	z, BB0_13
	ld	a, 1
	jq	BB0_12
BB0_10:
	ld	hl, 100
	push	hl
	call	_delay
	pop	hl
	ld	a, 2
	jq	BB0_12
BB0_11:
	ld	hl, 100
	push	hl
	call	_delay
	pop	hl
	ld	a, 3
BB0_12:
	ld	l, a
	ld	(ix + -3), hl
BB0_13:
	call	_get_single_key_pressed
	ld	l, a
	or	a, a
	jq	nz, BB0_15
	ld	b, (ix + -4)
	jq	BB0_19
BB0_15:
	ld	b, (ix + -4)
	ld	a, b
	cp	a, 8
	jq	nc, BB0_19
	push	hl
	ld	hl, (ix + -3)
	push	hl
	call	_inputChar
	ld	b, (ix + -4)
	ld	c, a
	pop	de
	pop	de
	ld	a, (ix + 9)
	cp	a, b
	jq	c, BB0_19
	ld	a, c
	or	a, a
	jq	z, BB0_19
	or	a, a
	sbc	hl, hl
	ex	de, hl
	ld	e, b
	ld	hl, (ix + 6)
	add	hl, de
	ld	(hl), c
	inc	b
BB0_19:
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, b
	or	a, a
	jq	z, BB0_20
	ld	a, l
	cp	a, 0
	call	__setflag
	jq	m, BB0_22
BB0_20:
	ld	(ix + -4), b
	jq	BB0_23
BB0_22:
	ld	de, 0
	ld	e, b
	dec	de
	ld	hl, (ix + 6)
	add	hl, de
	ld	(hl), 0
	dec	b
	ld	(ix + -4), b
	ld	hl, 80
	push	hl
	call	_delay
	pop	hl
BB0_23:
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	ld	hl, 3
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 40
	push	hl
	ld	hl, 80
	push	hl
	ld	hl, 90
	push	hl
	ld	hl, 110
	push	hl
	call	_gfx_FillRectangle_NoClip
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 6
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 42
	push	hl
	ld	hl, 82
	push	hl
	ld	hl, 89
	push	hl
	ld	hl, 109
	push	hl
	call	_gfx_Rectangle_NoClip
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 40
	push	hl
	ld	hl, 80
	push	hl
	ld	hl, 90
	push	hl
	ld	hl, 110
	push	hl
	call	_gfx_Rectangle_NoClip
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 1
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 15
	push	hl
	ld	hl, 72
	push	hl
	ld	hl, 109
	push	hl
	ld	hl, 114
	push	hl
	call	_gfx_FillRectangle_NoClip
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 6
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 15
	push	hl
	ld	hl, 72
	push	hl
	ld	hl, 109
	push	hl
	ld	hl, 114
	push	hl
	call	_gfx_Rectangle_NoClip
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, (ix + -3)
	ld	a, l
	dec	a
	cp	a, 3
	jq	nc, BB0_25
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, L_switch.table.inputString
	add	hl, de
	ld	hl, (hl)
	ld	de, 95
	push	de
	ld	de, 180
	push	de
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
BB0_25:
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, 95
	push	hl
	ld	hl, 120
	push	hl
	ld	hl, L_.str.3
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 113
	push	hl
	ld	hl, 117
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 1
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	call	_gfx_GetTextX
	ld	(ix + -9), hl
	ld	hl, 6
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	a, (ix + -5)
	cp	a, 16
	jq	c, BB0_28
	ld	hl, (ix + -9)
	inc	hl
	ld	bc, 255
	call	__iand
	push	hl
	pop	de
	ld	(ix + -9), de
	ld	hl, 11
	push	hl
	ld	hl, 111
	push	hl
	push	de
	call	_gfx_VertLine_NoClip
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + -9)
	inc	hl
	ld	de, 11
	push	de
	ld	de, 111
	push	de
	push	hl
	call	_gfx_VertLine_NoClip
	pop	hl
	pop	hl
	pop	hl
	ld	l, (ix + -5)
	ld	a, l
	cp	a, 40
	ld	a, 0
	jq	z, BB0_28
	ld	a, l
BB0_28:
	ld	hl, 1
	inc	a
	ld	(ix + -5), a
	push	hl
	call	_gfx_Blit
	pop	hl
	jq	BB0_1
BB0_29:
	ld.sis	hl, 200
BB0_30:
	push	hl
	call	_delay
	pop	hl
	ld	a, (ix + -6)
	ld	sp, ix
	pop	ix
	ret
BB0_31:
	ld.sis	hl, 150
	ld	a, 1
	ld	(ix + -6), a
	jq	BB0_30
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_inputChar
_inputChar:
	call	__frameset0
	ld	a, (ix + 6)
	ld	l, 0
	dec	a
	cp	a, 3
	jq	nc, BB1_2
	ld	e, (ix + 9)
	ld	iy, L_switch.table.inputChar
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	ld	hl, (iy)
	ld	bc, 0
	ld	c, e
	add	hl, bc
	ld	l, (hl)
BB1_2:
	ld	a, l
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_varToArray
_varToArray:
	ld	hl, -9
	call	__frameset
	ld	a, (ix + 6)
	ld	hl, 10
	ld	bc, 0
	ld	e, a
	push	de
	push	bc
	push	hl
	call	_ti_Seek
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix + 9)
	ld	de, -10
	add	iy, de
	ld	de, 1
	lea	hl, iy + 0
	or	a, a
	sbc	hl, de
	dec	de
	call	__setflag
	jq	p, BB2_2
	push	de
	pop	iy
BB2_2:
	ld	hl, (ix + 12)
	ld	(ix + -3), hl
	ld	a, (ix + 6)
	ld	e, a
BB2_3:
	lea	hl, iy + 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB2_5
	push	de
	ld	(ix + -6), de
	ld	(ix + -9), iy
	call	_ti_GetChar
	ld	iy, (ix + -9)
	pop	de
	ld	de, (ix + -6)
	ld	a, l
	ld	hl, (ix + -3)
	ld	(hl), a
	dec	iy
	inc	hl
	ld	(ix + -3), hl
	jq	BB2_3
BB2_5:
	ld	hl, (ix + 9)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_arrayToVar
_arrayToVar:
	ld	hl, -3
	call	__frameset
	ld	hl, (ix + 9)
	ld	a, (ix + 12)
	ld	de, 10
	add	hl, de
	ld	e, a
	ld	(ix + -3), de
	push	de
	push	hl
	call	_ti_Resize
	pop	hl
	pop	hl
	ld	hl, (ix + -3)
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 10
	push	hl
	call	_ti_Seek
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + -3)
	push	hl
	ld	hl, (ix + 9)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_ti_Write
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_loadFile
_loadFile:
	ld	hl, -50
	call	__frameset
	ld	de, (ix + 9)
	or	a, a
	sbc	hl, hl
	lea	bc, ix + -40
	ld	(ix + -46), bc
	push	hl
	pop	bc
BB4_1:
	ld	(ix + -43), hl
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB4_7
	ld	(ix + -49), bc
	ld	hl, 40
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, (ix + -46)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	xor	a, a
	ld	iyl, a
	ld	bc, (ix + -43)
BB4_3:
	ld	de, 315
	or	a, a
	sbc	hl, de
	call	__setflag
	ld	(ix + -43), bc
	jq	p, BB4_6
	ld	hl, (ix + 6)
	add	hl, bc
	ld	a, (hl)
	cp	a, 1
	jq	z, BB4_6
	ld	de, 0
	ld	e, iyl
	ld	bc, (ix + -46)
	push	bc
	pop	hl
	add	hl, de
	ld	(hl), a
	push	bc
	push	af
	ld	a, iyl
	ld	(ix + -50), a
	pop	af
	call	_fontlib_GetStringWidth
	push	af
	ld	a, (ix + -50)
	ld	iyl, a
	pop	af
	ld	bc, (ix + -43)
	pop	de
	inc	bc
	inc	iyl
	jq	BB4_3
BB4_6:
	ld	iy, (ix + 12)
	pea	iy + 7
	ld	hl, (ix + -46)
	push	hl
	call	_copyString
	pop	hl
	pop	hl
	ld	hl, (ix + -43)
	ld	bc, (ix + -49)
	inc	bc
	ld	de, (ix + 9)
	jq	BB4_1
BB4_7:
	push	bc
	pop	hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.rodata,"a",@progbits
	private	L_.str
L_.str:
	db	"1",000o

	section	.rodata,"a",@progbits
	private	L_.str.1
L_.str.1:
	db	"A",000o

	section	.rodata,"a",@progbits
	private	L_.str.2
L_.str.2:
	db	"a",000o

	section	.rodata,"a",@progbits
	private	L_.str.3
L_.str.3:
	db	"New file",000o

	section	.rodata,"a",@progbits
	private	L___const.inputChar.mathDat
L___const.inputChar.mathDat:
	db	"",000o,000o,000o,000o,000o,000o,000o,000o,000o,000o,"+-*/^",000o,000o,"-369)",000o,000o,000o,".258(",000o,000o,000o,"0147,",000o,000o,000o,000o,032o,000o,000o,000o,000o,000o

	section	.rodata,"a",@progbits
	private	L___const.inputChar.capsDat
L___const.inputChar.capsDat:
	db	"",000o,000o,000o,000o,000o,000o,000o,000o,000o,000o,"""WRMH",000o,000o,"?[VQLG",000o,000o,":ZUPKFC",000o," YTOJEB",000o,000o,"XSNIDA"

	section	.rodata,"a",@progbits
	private	L___const.inputChar.lowerCaseDat
L___const.inputChar.lowerCaseDat:
	db	"",000o,000o,000o,000o,000o,000o,000o,000o,000o,"""""wrmh",000o,000o,"?",000o,"vqlg",000o,000o,":zupkfc",000o," ytojeb",000o,000o,"xsnida"

	section	.bss,"aw",@nobits
	public	_HS
_HS:
	rb	364

	section	.rodata,"a",@progbits
	private	L_switch.table.inputString
L_switch.table.inputString:
	dl	L_.str
	dl	L_.str.1
	dl	L_.str.2

	section	.rodata,"a",@progbits
	private	L_switch.table.inputChar
L_switch.table.inputChar:
	dl	L___const.inputChar.mathDat
	dl	L___const.inputChar.capsDat
	dl	L___const.inputChar.lowerCaseDat

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	_memset
	extern	__Unwind_SjLj_Register
	extern	_copyString
	extern	__frameset
	extern	_get_single_key_pressed
	extern	_gfx_SetTextFGColor
	extern	_gfx_Rectangle_NoClip
	extern	_gfx_FillRectangle_NoClip
	extern	_kb_Scan
	extern	_ti_GetChar
	extern	_fontlib_GetStringWidth
	extern	_ti_Write
	extern	__sand
	extern	_ti_Seek
	extern	_ti_Resize
	extern	_gfx_VertLine_NoClip
	extern	_gfx_SetDraw
	extern	_gfx_GetTextX
	extern	__setflag
	extern	__Unwind_SjLj_Unregister
	extern	_gfx_Blit
	extern	__iand
	extern	__imulu
	extern	_gfx_SetColor
	extern	_delay
	extern	_gfx_PrintStringXY
	extern	__frameset0
